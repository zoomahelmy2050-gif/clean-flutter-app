// Mocks generated by Mockito 5.4.6 from annotations
// in clean_flutter/test/widget/advanced_services_dashboard_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:clean_flutter/core/services/advanced_biometrics_service.dart'
    as _i2;
import 'package:clean_flutter/core/services/ai_powered_security_service.dart'
    as _i4;
import 'package:clean_flutter/core/services/feature_flag_service.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeVoicePattern_0 extends _i1.SmartFake implements _i2.VoicePattern {
  _FakeVoicePattern_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGaitPattern_1 extends _i1.SmartFake implements _i2.GaitPattern {
  _FakeGaitPattern_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFacialMicroExpression_2 extends _i1.SmartFake
    implements _i2.FacialMicroExpression {
  _FakeFacialMicroExpression_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBiometricTemplate_3 extends _i1.SmartFake
    implements _i2.BiometricTemplate {
  _FakeBiometricTemplate_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFeatureFlag_4 extends _i1.SmartFake implements _i3.FeatureFlag {
  _FakeFeatureFlag_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AiPoweredSecurityService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAiPoweredSecurityService extends _i1.Mock
    implements _i4.AiPoweredSecurityService {
  MockAiPoweredSecurityService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isInitialized =>
      (super.noSuchMethod(Invocation.getter(#isInitialized), returnValue: false)
          as bool);

  @override
  _i5.Stream<Map<String, dynamic>> get anomalyStream =>
      (super.noSuchMethod(
            Invocation.getter(#anomalyStream),
            returnValue: _i5.Stream<Map<String, dynamic>>.empty(),
          )
          as _i5.Stream<Map<String, dynamic>>);

  @override
  _i5.Stream<Map<String, dynamic>> get threatStream =>
      (super.noSuchMethod(
            Invocation.getter(#threatStream),
            returnValue: _i5.Stream<Map<String, dynamic>>.empty(),
          )
          as _i5.Stream<Map<String, dynamic>>);

  @override
  _i5.Stream<Map<String, dynamic>> get riskStream =>
      (super.noSuchMethod(
            Invocation.getter(#riskStream),
            returnValue: _i5.Stream<Map<String, dynamic>>.empty(),
          )
          as _i5.Stream<Map<String, dynamic>>);

  @override
  _i5.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<Map<String, dynamic>> analyzeUserBehavior(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#analyzeUserBehavior, [userId]),
            returnValue: _i5.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<Map<String, dynamic>> detectThreats(
    Map<String, dynamic>? eventData,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#detectThreats, [eventData]),
            returnValue: _i5.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<List<Map<String, dynamic>>> getPredictiveInsights() =>
      (super.noSuchMethod(
            Invocation.method(#getPredictiveInsights, []),
            returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i5.Future<List<Map<String, dynamic>>>);

  @override
  Map<String, dynamic> getSecurityMetrics() =>
      (super.noSuchMethod(
            Invocation.method(#getSecurityMetrics, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  _i5.Future<Map<String, dynamic>> analyzeSecurityEvent(
    Map<String, dynamic>? event,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#analyzeSecurityEvent, [event]),
            returnValue: _i5.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i5.Future<Map<String, dynamic>>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [AdvancedBiometricsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAdvancedBiometricsService extends _i1.Mock
    implements _i2.AdvancedBiometricsService {
  MockAdvancedBiometricsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Stream<_i2.MultiModalBiometric> get biometricStream =>
      (super.noSuchMethod(
            Invocation.getter(#biometricStream),
            returnValue: _i5.Stream<_i2.MultiModalBiometric>.empty(),
          )
          as _i5.Stream<_i2.MultiModalBiometric>);

  @override
  bool get isInitialized =>
      (super.noSuchMethod(Invocation.getter(#isInitialized), returnValue: false)
          as bool);

  @override
  _i5.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  Map<String, dynamic> getBiometricMetrics() =>
      (super.noSuchMethod(
            Invocation.method(#getBiometricMetrics, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  _i5.Future<bool> enrollBiometric(
    String? userId,
    String? biometricType,
    Map<String, dynamic>? data,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#enrollBiometric, [userId, biometricType, data]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> verifyBiometric(
    String? userId,
    String? biometricType,
    Map<String, dynamic>? data,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#verifyBiometric, [userId, biometricType, data]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<_i2.VoicePattern> analyzeVoice(
    String? userId,
    List<int>? audioData,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#analyzeVoice, [userId, audioData]),
            returnValue: _i5.Future<_i2.VoicePattern>.value(
              _FakeVoicePattern_0(
                this,
                Invocation.method(#analyzeVoice, [userId, audioData]),
              ),
            ),
          )
          as _i5.Future<_i2.VoicePattern>);

  @override
  _i5.Future<_i2.GaitPattern> analyzeGait(
    String? userId,
    Map<String, List<double>>? sensorData,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#analyzeGait, [userId, sensorData]),
            returnValue: _i5.Future<_i2.GaitPattern>.value(
              _FakeGaitPattern_1(
                this,
                Invocation.method(#analyzeGait, [userId, sensorData]),
              ),
            ),
          )
          as _i5.Future<_i2.GaitPattern>);

  @override
  _i5.Future<_i2.FacialMicroExpression> analyzeFacialExpression(
    String? userId,
    List<int>? imageData,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#analyzeFacialExpression, [userId, imageData]),
            returnValue: _i5.Future<_i2.FacialMicroExpression>.value(
              _FakeFacialMicroExpression_2(
                this,
                Invocation.method(#analyzeFacialExpression, [
                  userId,
                  imageData,
                ]),
              ),
            ),
          )
          as _i5.Future<_i2.FacialMicroExpression>);

  @override
  _i5.Future<double> verifyMultiModalBiometric({
    required String? userId,
    List<int>? audioData,
    Map<String, List<double>>? sensorData,
    List<int>? imageData,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#verifyMultiModalBiometric, [], {
              #userId: userId,
              #audioData: audioData,
              #sensorData: sensorData,
              #imageData: imageData,
            }),
            returnValue: _i5.Future<double>.value(0.0),
          )
          as _i5.Future<double>);

  @override
  _i5.Future<_i2.BiometricTemplate> enrollUser(
    String? userId,
    Map<String, dynamic>? biometricData,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#enrollUser, [userId, biometricData]),
            returnValue: _i5.Future<_i2.BiometricTemplate>.value(
              _FakeBiometricTemplate_3(
                this,
                Invocation.method(#enrollUser, [userId, biometricData]),
              ),
            ),
          )
          as _i5.Future<_i2.BiometricTemplate>);

  @override
  Map<String, dynamic> getBiometricStats(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getBiometricStats, [userId]),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [FeatureFlagService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFeatureFlagService extends _i1.Mock
    implements _i3.FeatureFlagService {
  MockFeatureFlagService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Stream<_i3.FeatureFlag> get flagStream =>
      (super.noSuchMethod(
            Invocation.getter(#flagStream),
            returnValue: _i5.Stream<_i3.FeatureFlag>.empty(),
          )
          as _i5.Stream<_i3.FeatureFlag>);

  @override
  _i5.Stream<_i3.ExperimentResult> get experimentStream =>
      (super.noSuchMethod(
            Invocation.getter(#experimentStream),
            returnValue: _i5.Stream<_i3.ExperimentResult>.empty(),
          )
          as _i5.Stream<_i3.ExperimentResult>);

  @override
  bool get isInitialized =>
      (super.noSuchMethod(Invocation.getter(#isInitialized), returnValue: false)
          as bool);

  @override
  _i5.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i3.FeatureFlag> createFlag(_i3.FeatureFlag? flag) =>
      (super.noSuchMethod(
            Invocation.method(#createFlag, [flag]),
            returnValue: _i5.Future<_i3.FeatureFlag>.value(
              _FakeFeatureFlag_4(this, Invocation.method(#createFlag, [flag])),
            ),
          )
          as _i5.Future<_i3.FeatureFlag>);

  @override
  _i5.Future<bool> isFeatureEnabled(
    String? flagId,
    _i3.UserContext? userContext,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#isFeatureEnabled, [flagId, userContext]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<String> getFeatureVariant(
    String? flagId,
    _i3.UserContext? userContext,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getFeatureVariant, [flagId, userContext]),
            returnValue: _i5.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#getFeatureVariant, [flagId, userContext]),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<void> recordExperimentResult({
    required String? experimentId,
    required String? userId,
    required String? variant,
    required Map<String, dynamic>? metrics,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#recordExperimentResult, [], {
              #experimentId: experimentId,
              #userId: userId,
              #variant: variant,
              #metrics: metrics,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> updateFlag(
    String? flagId, {
    bool? isEnabled,
    Map<String, dynamic>? conditions,
    Map<String, dynamic>? variants,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #updateFlag,
              [flagId],
              {
                #isEnabled: isEnabled,
                #conditions: conditions,
                #variants: variants,
              },
            ),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteFlag(String? flagId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteFlag, [flagId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.FeatureFlag>> getAllFlags() =>
      (super.noSuchMethod(
            Invocation.method(#getAllFlags, []),
            returnValue: _i5.Future<List<_i3.FeatureFlag>>.value(
              <_i3.FeatureFlag>[],
            ),
          )
          as _i5.Future<List<_i3.FeatureFlag>>);

  @override
  _i5.Future<_i3.FeatureFlag?> getFlag(String? flagId) =>
      (super.noSuchMethod(
            Invocation.method(#getFlag, [flagId]),
            returnValue: _i5.Future<_i3.FeatureFlag?>.value(),
          )
          as _i5.Future<_i3.FeatureFlag?>);

  @override
  _i5.Future<Map<String, dynamic>> getExperimentAnalytics(
    String? experimentId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getExperimentAnalytics, [experimentId]),
            returnValue: _i5.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i5.Future<Map<String, dynamic>>);

  @override
  Map<String, dynamic> getFeatureFlagMetrics() =>
      (super.noSuchMethod(
            Invocation.method(#getFeatureFlagMetrics, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  String? getExperimentVariant(
    String? experimentId,
    _i3.UserContext? userContext,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getExperimentVariant, [
              experimentId,
              userContext,
            ]),
          )
          as String?);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
}
